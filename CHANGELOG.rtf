Prototyping Connected Products

By Group 3 (Cais, Kiki and Yu)


“While the population of wheelchair users is growing worldwide, it becomes urgent to design supportive technologies
that fit their needs. We aim to develop products for improvement of the wheelchair users’ wellbeing. This design is
a connected product that collects data from sensors, processes it in order to actuate user interactions embedded in
the wheelchair.”

Building upon this brief, we envision our target user group as (either full- or part-time) manual wheelchair users
aiming to work towards or maintain a healthier, more active lifestyle. Features of our connected product will include
distance and activity tracking (such as GPS and accelerometer), with sensory feedback and an app-based UX interface.
______________________________________________________________________________________________________________________

20/09/19
BNO_UnifiedValues_LEDs.ino v1
- 1x neopixel LED ring
  -each consecutive LED is illuminated when a certain total distance is achieved via BNO sensor
  - intended distance = 100m; 10m for testing purposes

- BNO sensor outputs unified values; interpreted to find no. of rotations
  - no. of rotations multiplied by distance factor (total distance in m covered by 1 wheel rotation)
______________________________________________________________________________________________________________________

23/09/19
BNO_UnifiedValues_LEDs.ino v2
- LED colour changes with no. of distance units achieved - 1-4 = red, 5-8 = orange, 9-12 = yellow, 13-16 = green
  - note: transition from 16 back to 0 must be clearly completed otherwise LED cycles overlap

BNO_GATT v1
- Collects data from BNO sensor and sends via Bluetooth to python file on Raspberry Pi

GATT_Orientation.py v1
- Collects BNO data via bluetooth, parses and sends to DCD Hub

Process Images
- added folder for photos of prototyping

______________________________________________________________________________________________________________________

27/09/19
- Automatically Sharing IP Address with the DCDHub
- Installed the feather on the wheelchair
- Sending distance data from pi to Arduino over serial
- Processing BNO data and sending it over bluetooth from feather to Pi

To do:
- Finish the reception of data on Arduino/turning on the LED's
- Using orientation together with distance to map route.

______________________________________________________________________________________________________________________

04/10/19
-Sending data from feather to pi, then processing and implementing as variable in js script
(within html file)
- visualising distance data on localhost:5000/distance in the form of a progress bar

To do:
- websocket troubleshooting ("no socket" message received in console)
- develop visualisation
- extract other types of relevant data (time, speed) and visualise accordingly

______________________________________________________________________________________________________________________

07/10/19
- Functional data flow between feather, pi and webpage, using SocketIO
- Progress bar that visualises total distance covered by wheelchair, updates in real-time and changes colour accordingly
- GPS data (co-ordinates) extracted from GPS sensor and plotted on Google Maps successfully (sample rate = 2s)
- Orientation data extracted from BNO sensor

To do:
- Implement google maps API in HTML
- Further develop visualisations of distance and location
- Plot movements using distance, location and orientation

______________________________________________________________________________________________________________________

11/10/19
- Added a web interface to visualise the data
  - Web interface visualises speed, cumulative distance and time elapsed (speed and distance received over BLE)
- Visual system architecture - pcp_images/SYSTEM_ARCHITECTURE.jpg
- Successfully recording and plotting GPS co-ordinates on Google Maps

To do:
- Make distance calculation more accurate (change distFactor)
- Edit speed calculation (from m/s to km/h)
- Make GPS plotting real-time and incorporate into web interface

______________________________________________________________________________________________________________________

14/10/19

- Edited speed calculation and updated HTML accordingly
- Investigated running serial and bluetooth concurrently - needs further investigation
- Progress on web interface - pause overlay, stop/start buttons, landing page

To do:
- Wire up BNO and GPS sensors concurrently to feather
  - Read GPS directly from feather serial, process and send as another GATT characteristic to python
- Investigate issue with co-ordinate array and google maps API

______________________________________________________________________________________________________________________


21/10/19

- Functional serial comms (between GPS/arduino mega and RPi) simultaneously with BLE comms (feather), using threading
- New web interface with workout countdown and pause overlay + buttons
- Improved GPS plotting - live updating of co-ordinates, with one point plotted per second

To do:
- Get GPS plotting on google maps API - pass co-ords from HTML to correct variables
- Refine web interface 
